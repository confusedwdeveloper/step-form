{"version":3,"sources":["components/appbar/Appbar.component.jsx","components/form-user-details/FormUserDetails.component.jsx","components/form-personal-details/FormPersonalDetails.component.jsx","components/confirm/Confirm.component.jsx","components/success/Success.component.jsx","components/user-form/UserForm.component.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","light","background","marginBottom","Appbar","props","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","text","defaultProps","FormUserDetails","continue","e","preventDefault","nextStep","this","values","handleChange","TextField","onChange","defaultValue","firstName","label","helperText","lastName","email","type","Button","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","styles1","Success","List","ListItem","textAlign","ListItemText","primary","secondary","Confirm","UserForm","state","step","setState","input","target","value","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67f2ff4c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  light: {\n    background: \"#7986cb\",\n    marginBottom: \"1rem\"\n  }\n}));\n\nexport default function Appbar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.light}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.title}>\n            {props.text}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nAppbar.defaultProps = {\n  text: \"Enter User Details\"\n};\n","import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"../appbar/Appbar.component\";\n\nclass FormUserDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n      <>\n        <Appbar />\n        <TextField\n          onChange={handleChange(\"firstName\")}\n          defaultValue={values.firstName}\n          label=\"First Name\"\n          helperText=\"Enter Your First Name\"\n        />\n        <br />\n        <TextField\n          onChange={handleChange(\"lastName\")}\n          defaultValue={values.lastName}\n          label=\"Last Name\"\n          helperText=\"Enter Your Last Name\"\n        />\n        <br />\n        <TextField\n          onChange={handleChange(\"email\")}\n          defaultValue={values.email}\n          label=\"Email\"\n          helperText=\"Enter Your Email\"\n          type=\"email\"\n        />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={styles.button}\n          onClick={this.continue}\n        >\n          Continue\n        </Button>\n      </>\n    );\n  }\n}\nconst styles = {\n  button: {\n    margin: 15\n  }\n};\n\nexport default FormUserDetails;\n","import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"../appbar/Appbar.component\";\n\nclass FormPersonalDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n\n    return (\n      <>\n        <Appbar text={\"Enter Personal Details\"} />\n        <TextField\n          onChange={handleChange(\"occupation\")}\n          defaultValue={values.occupation}\n          label=\"Occupation\"\n          helperText=\"Enter Your Occupation\"\n        />\n        <br />\n        <TextField\n          onChange={handleChange(\"city\")}\n          defaultValue={values.city}\n          label=\"City\"\n          helperText=\"Enter Your City\"\n        />\n        <br />\n        <TextField\n          onChange={handleChange(\"bio\")}\n          defaultValue={values.bio}\n          label=\"Bio\"\n          helperText=\"Enter Your Bio\"\n        />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={styles.button}\n          onClick={this.continue}\n        >\n          Continue\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={styles1.button}\n          onClick={this.back}\n        >\n          Back\n        </Button>\n      </>\n    );\n  }\n}\nconst styles = {\n  button: {\n    margin: 15\n  }\n};\nconst styles1 = {\n  button: {\n    margin: 15,\n    background: \"#7986cb\"\n  }\n};\n\nexport default FormPersonalDetails;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"../appbar/Appbar.component\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nclass Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { firstName, lastName, email, occupation, city, bio }\n    } = this.props;\n\n    return (\n      <>\n        <Appbar text=\"Confirm User Data\" />\n        <List>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"First Name\" secondary={firstName} />\n          </ListItem>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"Last Name\" secondary={lastName} />\n          </ListItem>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"Email\" secondary={email} />\n          </ListItem>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"Occupation\" secondary={occupation} />\n          </ListItem>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"City\" secondary={city} />\n          </ListItem>\n          <ListItem style={{ textAlign: \"center\" }}>\n            <ListItemText primary=\"Bio\" secondary={bio} />\n          </ListItem>\n        </List>\n\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={styles.button}\n          onClick={this.continue}\n        >\n          Confirm & Continue\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={styles1.button}\n          onClick={this.back}\n        >\n          Back\n        </Button>\n      </>\n    );\n  }\n}\nconst styles = {\n  button: {\n    margin: 15\n  }\n};\nconst styles1 = {\n  button: {\n    margin: 15,\n    background: \"#7986cb\"\n  }\n};\n\nexport default Success;\n","import React, { Component } from \"react\";\nimport Appbar from \"../appbar/Appbar.component\";\nimport { Typography } from \"@material-ui/core\";\n\nclass Confirm extends Component {\n  render() {\n    return (\n      <>\n        <Appbar text=\"Success\" />\n        <Typography variant=\"h4\">Thank You For Your Submission</Typography>\n        <Typography style={{ margin: \"1rem auto\" }} variant=\"body1\">\n          You will get an email with further instructions\n        </Typography>\n      </>\n    );\n  }\n}\n\nexport default Confirm;\n","import React, { Component } from \"react\";\nimport FormUserDetails from \"../form-user-details/FormUserDetails.component\";\nimport FormPersonalDetails from \"../form-personal-details/FormPersonalDetails.component\";\nimport Confirm from \"../confirm/Confirm.component\";\nimport Success from \"../success/Success.component\";\n\nclass UserForm extends Component {\n  state = {\n    step: 1,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    occupation: \"\",\n    city: \"\",\n    bio: \"\"\n  };\n\n  // proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n  // go back to previous step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n  // handle fields change\n  handleChange = input => e => {\n    this.setState({\n      [input]: e.target.value\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { firstName, lastName, email, occupation, city, bio } = this.state;\n    const values = { firstName, lastName, email, occupation, city, bio };\n\n    // bunch of returns\n    switch (step) {\n      case 1: {\n        return (\n          <FormUserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      }\n      case 2: {\n        return (\n          <FormPersonalDetails\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      }\n      case 3: {\n        return (\n          <Confirm\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            values={values}\n          />\n        );\n      }\n      default: {\n        return <Success />;\n      }\n    }\n  }\n}\n\nexport default UserForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport UserForm from \"./components/user-form/UserForm.component\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <UserForm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}